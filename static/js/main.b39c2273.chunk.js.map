{"version":3,"sources":["../../src/index.tsx","../../src/typeDefs.ts","../../src/useInjectScript.tsx","components/Accounts.js","components/Buckets.js","components/Reload.js","components/Transactions.js","components/GoogleButton.js","components/DropboxButton.js","App.js","index.js"],"names":["mod","exports","react_1","require","typeDefs_1","useInjectScript_1","_f","picker","defaultScopes","_a","default","loaded","error","_b","pickerApiLoaded","_c","setpickerApiLoaded","_d","_g","useEffect","loadedGsi","loadApis","openAfterAuth","load","callback","token","disabled","_e","showUploadView","showUploadFolders","config","setConfig","oauth2","initTokenClient","scope","customScopes","join","createPicker","__assign","tokenResponse","injectorState","url","state","job","injectorMap","src","onScriptEvent","addEventListener","setState","Accounts","accounts","setTransactionView","currency","budgetAccounts","filter","a","offBudgetAccounts","Accordion","defaultActiveKey","alwaysOpen","Item","eventKey","Header","Body","Table","striped","hover","bordered","map","account","onClick","format","Buckets","buckets","bucketCats","Array","from","entries","cat","i","values","find","c","bucket","Reload","setAccessToken","provider","setLoadDropbox","handleReload","Promise","resolve","reject","document","querySelector","script","createElement","onload","onerror","err","body","appendChild","then","window","google","client_id","process","access_token","requestAccessToken","Button","variant","Transactions","transactionView","transactions","dateFormat","filteredTransactions","t","reverse","className","transaction","Date","split","toLocaleDateString","undefined","GoogleButton","openPicker","setFileSize","setFileId","setProvider","size","clientId","developerKey","viewId","supportDrives","multiselect","viewMimeTypes","viewQuery","callbackFunction","data","action","console","log","docs","sizeBytes","id","localStorage","setItem","DropboxButton","Dropbox","ref","color","title","xmlns","viewBox","width","height","fill","d","handleOpenDropboxChooser","setAttribute","choose","extensions","linkType","success","bytes","link","App","useState","db","setDb","useDrivePicker","authResponse","fileId","fileSize","setBuckets","setBucketCats","setAccounts","bucketTransactions","setBucketTransactions","accountTransactions","setAccountTransactions","view","setView","lastUpdated","setLastUpdated","reloadToken","setReloadToken","downloadProgress","setDownloadProgress","setError","loadDropbox","Intl","NumberFormat","style","year","month","day","loadDB","response","uInt8Array","Uint8Array","initSqlJs","locateFile","file","SQL","Database","getGoogleDriveFile","headers","Authorization","responseType","onDownloadProgress","progressEvent","Math","floor","axios","get","catch","e","message","clear","getDropboxFile","newBuckets","exec","reduce","entryMap","set","Map","JSON","stringify","newBucketCats","newAccounts","newBucketTransactions","newAccountTransactions","toString","getItem","parse","Alert","textAlign","Navbar","bg","Container","Brand","position","bottom","accessToken","Tabs","activeKey","onSelect","k","Tab","href","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.b39c2273.chunk.js","sourcesContent":[null,null,null,"import { Accordion, Table } from 'react-bootstrap'\n\nconst Accounts = ({ accounts, setTransactionView, currency }) => {\n  const budgetAccounts = accounts.filter((a) => a[3] !== 'offbudget')\n  const offBudgetAccounts = accounts.filter((a) => a[3] === 'offbudget')\n\n  return (\n    <Accordion defaultActiveKey={[0]} alwaysOpen>\n      <Accordion.Item eventKey={0}>\n        <Accordion.Header>Budget Accounts</Accordion.Header>\n        <Accordion.Body>\n          <Table striped hover bordered>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Balance</th>\n              </tr>\n              {budgetAccounts.map((account) => (\n                <tr\n                  key={account[0]}\n                  onClick={() => {\n                    setTransactionView([\n                      'account',\n                      account[0],\n                      account[1],\n                      account[2]\n                    ])\n                  }}\n                >\n                  <td>{account[1]}</td>\n                  <td>{currency.format(account[2] / 100.0)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey={1}>\n        <Accordion.Header>Off Budget Accounts</Accordion.Header>\n        <Accordion.Body>\n          <Table striped hover bordered>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Balance</th>\n              </tr>\n              {offBudgetAccounts.map((account) => (\n                <tr\n                  key={account[0]}\n                  onClick={() => {\n                    setTransactionView([\n                      'account',\n                      account[0],\n                      account[1],\n                      account[2]\n                    ])\n                  }}\n                >\n                  <td>{account[1]}</td>\n                  <td>{currency.format(account[2] / 100.0)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  )\n}\n\nexport default Accounts\n","import { Accordion, Table } from 'react-bootstrap'\n\nconst Buckets = ({ buckets, bucketCats, setTransactionView, currency }) => {\n  return (\n    <Accordion defaultActiveKey={[]} alwaysOpen>\n      {Array.from(buckets.entries()).map((cat, i) => {\n        return (\n          <Accordion.Item eventKey={i} key={i}>\n            <Accordion.Header>\n              {bucketCats.values.find((c) => c[0] === cat[0])\n                ? bucketCats.values.find((c) => c[0] === cat[0])[1]\n                : 'Misc'}\n            </Accordion.Header>\n            <Accordion.Body>\n              <Table striped hover bordered>\n                <tbody>\n                  <tr>\n                    <th>Name</th>\n                    <th>Balance</th>\n                  </tr>\n\n                  {cat[1].map((bucket) => (\n                    <tr key={bucket[0]}>\n                      <td\n                        onClick={() => {\n                          setTransactionView([\n                            'bucket',\n                            bucket[0],\n                            bucket[1],\n                            bucket[2]\n                          ])\n                        }}\n                      >\n                        {bucket[1]}\n                      </td>\n                      <td>{currency.format(bucket[2] / 100.0)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Accordion.Body>\n          </Accordion.Item>\n        )\n      })}\n    </Accordion>\n  )\n}\n\nexport default Buckets\n","import { ArrowClockwise } from 'react-bootstrap-icons'\nimport { Button } from 'react-bootstrap'\n\nconst Reload = ({ setAccessToken, provider, setLoadDropbox }) => {\n  const loadScript = (src) =>\n    new Promise((resolve, reject) => {\n      if (document.querySelector(`script[src=\"${src}\"]`)) return resolve()\n      const script = document.createElement('script')\n      script.src = src\n      script.onload = () => resolve()\n      script.onerror = (err) => reject(err)\n      document.body.appendChild(script)\n    })\n\n  const handleReload = () => {\n    if (provider === 'Dropbox') {\n      setLoadDropbox(true)\n    } else {\n      loadScript('https://accounts.google.com/gsi/client').then(() => {\n        const google = window.google\n        const client = google.accounts.oauth2.initTokenClient({\n          client_id: process.env.REACT_APP_CLIENT_ID,\n          scope: 'https://www.googleapis.com/auth/drive.file',\n          callback: (tokenResponse) => {\n            setAccessToken(tokenResponse.access_token)\n          }\n        })\n\n        client.requestAccessToken()\n      })\n    }\n  }\n\n  return (\n    <Button variant=\"light\" onClick={() => handleReload()}>\n      <ArrowClockwise /> Reload\n    </Button>\n  )\n}\n\nexport default Reload\n","import { Table } from 'react-bootstrap'\n\nconst Transactions = ({\n  transactionView,\n  setTransactionView,\n  transactions,\n  currency,\n  dateFormat\n}) => {\n  if (!transactions) {\n    return (\n      <p>\n        No transactions found. You probably need to reload your budget file to\n        see transactions.\n      </p>\n    )\n  }\n\n  const filteredTransactions = transactions\n    .filter((t) => t[1] === transactionView[1])\n    .reverse()\n\n  return (\n    <div>\n      <h3>{transactionView[2]}</h3>\n      <p>\n        <strong>Balance: {currency.format(transactionView[3] / 100.0)}</strong>{' '}\n        |{' '}\n        <button\n          className=\"back\"\n          onClick={() => {\n            setTransactionView(null)\n          }}\n        >\n          Go Back\n        </button>\n      </p>\n      <Table striped hover bordered>\n        <tbody>\n          <tr>\n            <th>Posted</th>\n            <th>Memo</th>\n            <th>Amount</th>\n          </tr>\n\n          {filteredTransactions.map((transaction) => (\n            <tr key={transaction[0]}>\n              <td>\n                {new Date(transaction[2].split(' ')[0]).toLocaleDateString(\n                  undefined,\n                  dateFormat\n                )}\n              </td>\n              <td>{transaction[3]}</td>\n              <td>{currency.format(transaction[4] / 100.0)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Transactions\n","import { Button } from 'react-bootstrap'\nimport { Google } from 'react-bootstrap-icons'\n\nconst GoogleButton = ({ openPicker, setFileSize, setFileId, setProvider }) => {\n  // Use Google Drive Picker\n  const handleOpenPicker = () => {\n    openPicker({\n      clientId: process.env.REACT_APP_CLIENT_ID,\n      developerKey: process.env.REACT_APP_DEVELOPER_KEY,\n      viewId: 'DOCS',\n      // token: localStorage.getItem('auth') || null, // pass oauth token in case you already have one\n      showUploadView: false,\n      showUploadFolders: false,\n      supportDrives: true,\n      multiselect: true,\n      viewMimeTypes: 'application/octet-stream',\n      viewQuery: '*.buckets',\n      customScopes: ['https://www.googleapis.com/auth/drive.file'],\n      callbackFunction: (data) => {\n        if (data.action === 'cancel') {\n          console.log('User clicked cancel/close button')\n        }\n        if (data.action === 'picked') {\n          setFileSize(data.docs[0].sizeBytes)\n          setFileId(data.docs[0].id)\n          localStorage.setItem('fileId', data.docs[0].id)\n          localStorage.setItem('provider', 'Google')\n          setProvider('Google')\n        }\n      }\n    })\n  }\n\n  return (\n    <Button\n      size=\"lg\"\n      variant=\"danger\"\n      className=\"googleButton\"\n      onClick={() => handleOpenPicker()}\n    >\n      <Google /> Google Drive\n    </Button>\n  )\n}\n\nexport default GoogleButton\n","import { Button } from 'react-bootstrap'\n\nconst DropboxButton = ({\n  setFileSize,\n  setFileId,\n  setProvider,\n  setLoadDropbox\n}) => {\n  // Replace with icon from react-bootstrap-icons when available\n  const Dropbox = ({ color, size, title, ...rest }, ref) => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n        width=\"1em\"\n        height=\"1em\"\n        fill=\"#fff\"\n      >\n        {title ? <title>{title}</title> : null}\n\n        <path d=\"M8.01 4.555 4.005 7.11 8.01 9.665 4.005 12.22 0 9.651l4.005-2.555L0 4.555 4.005 2 8.01 4.555Zm-4.026 8.487 4.006-2.555 4.005 2.555-4.005 2.555-4.006-2.555Zm4.026-3.39 4.005-2.556L8.01 4.555 11.995 2 16 4.555 11.995 7.11 16 9.665l-4.005 2.555L8.01 9.651Z\" />\n      </svg>\n    )\n  }\n\n  const loadScript = (src) =>\n    new Promise((resolve, reject) => {\n      if (document.querySelector(`script[src=\"${src}\"]`)) return resolve()\n      const script = document.createElement('script')\n      script.setAttribute('src', src)\n      script.setAttribute('id', 'dropboxjs')\n      script.setAttribute('data-app-key', process.env.REACT_APP_DROPBOX_KEY)\n      script.onload = () => resolve()\n      script.onerror = (err) => reject(err)\n      document.body.appendChild(script)\n    })\n\n  // Use Dropbox Chooser\n  const handleOpenDropboxChooser = () => {\n    loadScript('https://www.dropbox.com/static/api/2/dropins.js').then(() => {\n      window.Dropbox.choose({\n        extensions: ['.buckets'],\n        linkType: 'direct',\n        success: function (data) {\n          if (data) {\n            setFileSize(data[0].bytes)\n            setFileId(data[0].link)\n            localStorage.setItem('fileId', data[0].link)\n            setProvider('Dropbox')\n            localStorage.setItem('provider', 'Dropbox')\n            setLoadDropbox(true)\n          }\n        }\n      })\n    })\n  }\n\n  return (\n    <Button\n      size=\"lg\"\n      variant=\"primary\"\n      className=\"dropboxButton\"\n      onClick={() => handleOpenDropboxChooser()}\n    >\n      <Dropbox /> Dropbox\n    </Button>\n  )\n}\n\nexport default DropboxButton\n","import { useEffect, useState } from 'react'\nimport useDrivePicker from './react-google-drive-picker'\nimport axios from 'axios'\nimport initSqlJs from 'sql.js'\nimport Accounts from './components/Accounts'\nimport Buckets from './components/Buckets'\nimport Reload from './components/Reload'\nimport Transactions from './components/Transactions'\nimport { Container, Tab, Tabs, Navbar, Button, Alert } from 'react-bootstrap'\nimport { Bucket, FileEarmarkText } from 'react-bootstrap-icons'\nimport './App.css'\nimport GoogleButton from './components/GoogleButton'\nimport DropboxButton from './components/DropboxButton'\n\nfunction App() {\n  const [db, setDb] = useState(null)\n  const [openPicker, authResponse] = useDrivePicker()\n  const [fileId, setFileId] = useState(null)\n  const [fileSize, setFileSize] = useState(null)\n  const [buckets, setBuckets] = useState(null)\n  const [bucketCats, setBucketCats] = useState(null)\n  const [accounts, setAccounts] = useState(null)\n  const [bucketTransactions, setBucketTransactions] = useState(null)\n  const [accountTransactions, setAccountTransactions] = useState(null)\n  const [view, setView] = useState('buckets')\n  const [transactionView, setTransactionView] = useState(null) //null or [transaction type(bucket/account), bucket/account id, name, balance]\n  const [lastUpdated, setLastUpdated] = useState(null)\n  const [reloadToken, setReloadToken] = useState(null)\n  const [downloadProgress, setDownloadProgress] = useState(0)\n  const [error, setError] = useState(null)\n  const [provider, setProvider] = useState(null)\n  const [loadDropbox, setLoadDropbox] = useState(false)\n\n  const currency = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  })\n  const dateFormat = { year: 'numeric', month: 'long', day: 'numeric' }\n\n  //If we have an auth token, load the DB from Google Drive\n  useEffect(() => {\n    const loadDB = async (response) => {\n      const uInt8Array = new Uint8Array(response.data)\n      const SQL = await initSqlJs({\n        locateFile: (file) =>\n          `https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.8.0/${file}`\n      })\n      setDb(new SQL.Database(uInt8Array))\n    }\n\n    const getGoogleDriveFile = async () => {\n      setError(null)\n      const token = authResponse ? authResponse.access_token : reloadToken\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/x-sqlite3'\n        },\n        responseType: 'arraybuffer',\n        onDownloadProgress: (progressEvent) => {\n          setDownloadProgress(\n            Math.floor((progressEvent.loaded / fileSize) * 100)\n          )\n        }\n      }\n      const response = await axios\n        .get(\n          `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media&supportsAllDrives=true`,\n          config\n        )\n        .catch((e) => {\n          setError(e.message)\n          setFileId(null)\n          setBuckets(null)\n          setProvider(null)\n          localStorage.clear()\n        })\n      localStorage.setItem('fileId', fileId)\n      await loadDB(response)\n    }\n\n    const getDropboxFile = async () => {\n      setError(null)\n      const config = {\n        headers: {\n          'Content-Type': 'application/x-sqlite3'\n        },\n        responseType: 'arraybuffer',\n        onDownloadProgress: (progressEvent) => {\n          setDownloadProgress(\n            Math.floor((progressEvent.loaded / fileSize) * 100)\n          )\n        }\n      }\n      const response = await axios.get(`${fileId}`, config).catch((e) => {\n        setError(e.message)\n        setFileId(null)\n        setBuckets(null)\n        setProvider(null)\n        setLoadDropbox(false)\n        localStorage.clear()\n      })\n\n      setLoadDropbox(false)\n      await loadDB(response)\n    }\n\n    if (provider === 'Google' && (authResponse || reloadToken) && fileId) {\n      getGoogleDriveFile()\n    } else if (provider === 'Dropbox' && loadDropbox && fileId) {\n      console.log('loading dropbox file')\n      getDropboxFile()\n    }\n  }, [authResponse, reloadToken, fileId, fileSize, loadDropbox, provider])\n\n  //DB Queries - Saved to Local Storage and State\n  useEffect(() => {\n    if (db) {\n      try {\n        const newBuckets = db\n          .exec(\n            'SELECT id, name, balance, group_id FROM bucket WHERE kicked = 0'\n          )[0]\n          .values.reduce(\n            (entryMap, e) =>\n              entryMap.set(e[3], [...(entryMap.get(e[3]) || []), e]),\n            new Map()\n          )\n        setBuckets(newBuckets)\n        localStorage.setItem('buckets', JSON.stringify(Array.from(newBuckets)))\n\n        const newBucketCats = db.exec('SELECT id, name FROM bucket_group')[0]\n        setBucketCats(newBucketCats)\n        localStorage.setItem('bucketCats', JSON.stringify(newBucketCats))\n\n        const newAccounts = db.exec(\n          'SELECT id, name, balance, kind FROM account WHERE closed = 0'\n        )[0].values\n        setAccounts(newAccounts)\n        localStorage.setItem('accounts', JSON.stringify(newAccounts))\n\n        const newBucketTransactions = db.exec(\n          'SELECT id, bucket_id, posted, memo, amount FROM bucket_transaction WHERE posted > date(\"now\",\"-1 years\")'\n        )[0].values\n        setBucketTransactions(newBucketTransactions)\n        localStorage.setItem(\n          'bucketTransactions',\n          JSON.stringify(newBucketTransactions)\n        )\n\n        const newAccountTransactions = db.exec(\n          'SELECT id, account_id, posted, memo, amount FROM account_transaction WHERE posted > date(\"now\",\"-1 years\")'\n        )[0].values\n        setAccountTransactions(newAccountTransactions)\n        localStorage.setItem(\n          'accountTransactions',\n          JSON.stringify(newAccountTransactions)\n        )\n\n        setLastUpdated(new Date())\n        localStorage.setItem('lastUpdated', JSON.stringify(new Date()))\n      } catch (e) {\n        setError(e.toString())\n        setFileId(null)\n        setBuckets(null)\n        setDb(null)\n        localStorage.clear()\n      }\n    }\n  }, [db])\n\n  //Retrieve Data from Local Storage\n  useEffect(() => {\n    if (localStorage.getItem('buckets')) {\n      setBuckets(new Map(JSON.parse(localStorage.getItem('buckets'))))\n    }\n    if (localStorage.getItem('bucketCats')) {\n      setBucketCats(JSON.parse(localStorage.getItem('bucketCats')))\n    }\n    if (localStorage.getItem('accounts')) {\n      setAccounts(JSON.parse(localStorage.getItem('accounts')))\n    }\n    if (localStorage.getItem('bucketTransactions')) {\n      setBucketTransactions(\n        JSON.parse(localStorage.getItem('bucketTransactions'))\n      )\n    }\n    if (localStorage.getItem('accountTransactions')) {\n      setAccountTransactions(\n        JSON.parse(localStorage.getItem('accountTransactions'))\n      )\n    }\n    if (localStorage.getItem('lastUpdated')) {\n      setLastUpdated(new Date(JSON.parse(localStorage.getItem('lastUpdated'))))\n    }\n    if (localStorage.getItem('fileId')) {\n      setFileId(localStorage.getItem('fileId'))\n    }\n    if (localStorage.getItem('provider')) {\n      setProvider(localStorage.getItem('provider'))\n    } else if (localStorage.getItem('buckets')) {\n      setProvider('Google') // users may have loaded a file from Google before Dropbox was supported\n    }\n  }, [])\n\n  if (!fileId || error) {\n    return (\n      <>\n        {error ? <Alert variant=\"danger\">{error}</Alert> : null}\n        <div\n          style={{ height: '100vh' }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <div style={{ textAlign: 'center' }}>\n            <GoogleButton\n              openPicker={openPicker}\n              setFileSize={setFileSize}\n              setFileId={setFileId}\n              setProvider={setProvider}\n            />\n            <DropboxButton\n              setFileSize={setFileSize}\n              setFileId={setFileId}\n              setProvider={setProvider}\n              setLoadDropbox={setLoadDropbox}\n            />\n            <br />\n            <br />\n            <p>\n              Welcome to Buckets Viewer. Use one of the buttons above to select\n              your .buckets file.\n            </p>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  if (!buckets || !bucketCats || !accounts) {\n    return (\n      <div\n        style={{ height: '100vh', textAlign: 'center' }}\n        className=\"d-flex align-items-center justify-content-center\"\n      >\n        <div>\n          <p>Loading {downloadProgress}%</p>\n          <p>\n            Progress bar stuck?{' '}\n            <button\n              onClick={() => {\n                localStorage.clear()\n                setFileId(null)\n              }}\n              className=\"link\"\n            >\n              Click here\n            </button>{' '}\n            to start over.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>\n            <Bucket color=\"white\" style={{ position: 'relative', bottom: 2 }} />{' '}\n            Buckets Viewer\n          </Navbar.Brand>\n          <div style={{ textAlign: 'right' }}>\n            <Reload\n              accessToken={reloadToken}\n              setAccessToken={setReloadToken}\n              fileId={fileId}\n              provider={provider}\n              setLoadDropbox={setLoadDropbox}\n            />{' '}\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                setFileId(null)\n                setBuckets(null)\n                setReloadToken(null)\n                setProvider(null)\n              }}\n            >\n              <FileEarmarkText /> Select New File\n            </Button>\n          </div>\n        </Container>\n      </Navbar>\n      <Container>\n        <br />\n        <br />\n        <Tabs\n          activeKey={view}\n          onSelect={(k) => {\n            setView(k)\n            setTransactionView(null)\n          }}\n        >\n          <Tab eventKey=\"buckets\" title=\"Buckets\">\n            {!transactionView || !transactionView[0] === 'bucket' ? (\n              <Buckets\n                buckets={buckets}\n                bucketCats={bucketCats}\n                setTransactionView={setTransactionView}\n                currency={currency}\n              />\n            ) : (\n              <Transactions\n                transactionView={transactionView}\n                setTransactionView={setTransactionView}\n                transactions={bucketTransactions}\n                currency={currency}\n                dateFormat={dateFormat}\n              />\n            )}\n          </Tab>\n          <Tab eventKey=\"accounts\" title=\"Accounts\">\n            {!transactionView || !transactionView[0] === 'account' ? (\n              <Accounts\n                accounts={accounts}\n                setTransactionView={setTransactionView}\n                currency={currency}\n              />\n            ) : (\n              <Transactions\n                transactionView={transactionView}\n                setTransactionView={setTransactionView}\n                transactions={accountTransactions}\n                currency={currency}\n                dateFormat={dateFormat}\n              />\n            )}\n          </Tab>\n        </Tabs>\n        <div className=\"footer\">\n          {lastUpdated ? (\n            <p>\n              <br />\n              Last loaded {lastUpdated.toString()}\n            </p>\n          ) : null}\n          <p>\n            &copy;2022 Dustin Lammiman.{' '}\n            <a href=\"privacy.html\">Privacy Policy</a>. This website is not\n            associated with One Part Rain, LLC.\n          </p>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport App from './App'\nimport { createRoot } from 'react-dom/client'\n\ncreateRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}