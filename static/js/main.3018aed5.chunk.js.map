{"version":3,"sources":["../../src/index.tsx","../../src/typeDefs.ts","../../src/useInjectScript.tsx","components/Accounts.js","components/Buckets.js","components/Reload.js","components/Transactions.js","App.js","index.js"],"names":["mod","exports","react_1","require","typeDefs_1","useInjectScript_1","_f","picker","defaultScopes","_a","default","loaded","error","_b","pickerApiLoaded","_c","setpickerApiLoaded","_d","_g","useEffect","loadedGsi","loadApis","openAfterAuth","load","callback","token","disabled","_e","showUploadView","showUploadFolders","config","setConfig","oauth2","initTokenClient","scope","customScopes","join","createPicker","__assign","tokenResponse","injectorState","url","state","job","injectorMap","src","onScriptEvent","addEventListener","setState","Accounts","accounts","setTransactionView","currency","budgetAccounts","filter","a","offBudgetAccounts","Accordion","defaultActiveKey","alwaysOpen","Item","eventKey","Header","Body","Table","striped","hover","bordered","map","account","onClick","format","Buckets","buckets","bucketCats","Array","from","entries","cat","i","values","find","c","bucket","Reload","accessToken","setAccessToken","handleReload","Promise","resolve","reject","document","querySelector","script","createElement","onload","onerror","err","body","appendChild","then","window","google","client_id","process","access_token","requestAccessToken","Button","variant","Transactions","transactionView","transactions","dateFormat","filteredTransactions","t","reverse","className","transaction","Date","split","toLocaleDateString","undefined","App","useState","db","setDb","useDrivePicker","openPicker","authResponse","fileId","setFileId","fileSize","setFileSize","setBuckets","setBucketCats","setAccounts","bucketTransactions","setBucketTransactions","accountTransactions","setAccountTransactions","view","setView","lastUpdated","setLastUpdated","reloadToken","setReloadToken","downloadProgress","setDownloadProgress","setError","Intl","NumberFormat","style","year","month","day","handleOpenPicker","clientId","developerKey","viewId","supportDrives","multiselect","viewMimeTypes","viewQuery","callbackFunction","data","action","console","log","docs","sizeBytes","id","localStorage","setItem","getFile","headers","Authorization","responseType","onDownloadProgress","progressEvent","Math","floor","axios","get","catch","e","message","clear","response","uInt8Array","Uint8Array","initSqlJs","locateFile","file","SQL","Database","newBuckets","exec","reduce","entryMap","set","Map","JSON","stringify","newBucketCats","newAccounts","newBucketTransactions","newAccountTransactions","toString","getItem","parse","Alert","height","textAlign","size","Navbar","bg","Container","Brand","color","position","bottom","Tabs","activeKey","onSelect","k","Tab","title","href","class","createRoot","getElementById","render"],"mappings":"oVAIA,EACA,4BAKA,YAEA,OAAwBA,gBAAcA,EAAA,WAAtC,EARA,OAaQ,eAAkBC,eAAgB,gBAClCC,EAAwBC,KAGxBC,EAAwC,OACxCC,EAAoC,EAAcF,EAAjD,MAVTG,UAUqD,WACD,IA8BjDC,EA7BKC,EACJ,mDACIC,KAAwBJ,EAAQK,SAA/B,qCACPC,EAAM,EAAM,GAEZC,OACAC,GAAI,EAAWR,WAEf,0CAFI,EAIE,EAAM,KACR,QACD,kBACHS,EAAiBC,EAAE,GAEnBC,OACAC,kBAAU,GAAV,EAEI,OACO,EAAK,G,KAEXf,EAAK,oCACNI,OACC,UACD,gBAEAY,OACA,OACD,e,IAGMC,wBAEPR,GAAK,IAAAS,GAAA,MACLC,OAGDV,EAACC,W,IAIA,uBAIAU,GAAY,EACV,OADF,oBAUI,MAEK,WAMR,MACFX,EAEDC,EACAQ,Q,MAgDK,WAAgB,YAChBG,oBAEH,KAAKA,cAAkB,CAAEC,YAAF,IAEtB,cAEc,EAAX,IAEH,gBAEDC,EAAI,Q,EAIJ,EAAI,qBAA+B,IAAR,GAAmBV,IAE1C,mBACF,cACD,iBAEMN,EAAKiB,WACDjB,cACZkB,mBAEDC,OAAoB,IAAFD,GAAUA,EAC7BE,sBAzJDvB,u0BAsFQ,SAAkBwB,IAExBC,EAAC,G,EAGC,QAmBI,EAAQ,SAAAC,OAAAC,gBAAA,WAASH,EAAK,SAE1BI,OAAUJ,EAAOK,aAAcL,EAAQK,aAAe3B,GAAe4B,KACrE,KACAZ,SAAI,YAAiB,EAAO,GAC5Ba,EAA4BC,EAAK,QAAuB,CACpDb,MAASc,iBAGb,IACI,qB,KACiB,OAAW5B,IAAU,KAAgB,OAE1D0B,EAAa,IA3HjB/B,G,mGC2DaL,uBAA4C,UAC/C,GAD+C,aAE3C,GAF2C,OAGjD,OAHiD,iBAIvC,WACjB,a,uEC5ED,WAUMuC,EAA+B,OAC9B,GAD8B,YAExB,GAFwB,UAG1B,I,UAQX,SAAwCC,GAAW,IAC3ChC,KAAoBP,YAAQ,SAC1B,EAD0B,OAE3B,IAGPwC,c,OAAAA,IACO,uBACH,IACDjC,U,IAEsC,QAAvC,EAAI,EAAc,mBAA+B,IAAFA,OAC7C,EADF,UAII,uBAIJ+B,4B,IASqC,UAArCA,EAAM,YAAgBC,G,CAEhB,MAIF,YAAc,MACd5B,M,2CAKgB,Q,EAHG,Q,EAArB,EAAO,aAA4BJ,WACpC,EAEKA,YAA6B,IAAf,GAClB,WACQ,SAAMkC,GAAA,OACPA,IACN,IACF/B,mBAKgB,QAHbK,EAC6B,QAA/B,IAAc,iBAA0BF,WACpC,EACFA,YAA4B,IAAdE,GAHlB,EAKI,SALJ,EAMY2B,YAAYH,GAAC,SARzB,EASiBG,YAAWH,GAAK,kBAC3B,gBAEF,SAAc7B,GAAU,WAEvB,QACDA,K,OAK0B,QAL1BA,EAKF,EAAc,iBAA0BC,WACzC,IAAM,QAEN,8CAED,iBACA2B,EAAO,UAAAC,GAAAI,IAAAJ,EAAP,wB,SAEE,8BACK,UAAcA,oBAAc,0BAAEK,GAAM,QAEvC,aAAcC,iBAAK,oBAAnB,OACDD,KADC,MAGA,YAAaL,GAAM,aAKS,QAA3B1B,EAAC,EAAc,aAAYA,WACnC,EArFDA,MAkFG,4F,sOApDO,CAF+B,WACnC,SACI,GAVN,MAAAiC,EAAI,SACF,EADE,OAEA,G,8eC2BOC,EApEE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,mBAAoBC,EAAe,EAAfA,SAC1CC,EAAiBH,EAASI,QAAO,SAACC,GAAD,MAAgB,cAATA,EAAE,EAAT,IACjCC,EAAoBN,EAASI,QAAO,SAACC,GAAD,MAAgB,cAATA,EAAE,EAAT,IAE1C,OACE,eAACE,EAAA,EAAD,CAAWC,iBAAkB,CAAC,GAAIC,YAAU,EAA5C,UACE,eAACF,EAAA,EAAUG,KAAX,CAAgBC,SAAU,EAA1B,UACE,cAACJ,EAAA,EAAUK,OAAX,8BACA,cAACL,EAAA,EAAUM,KAAX,UACE,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,UAAQ,EAA7B,SACE,kCACE,+BACE,sCACA,4CAEDd,EAAee,KAAI,SAACC,GAAD,OAClB,qBAEEC,QAAS,WACPnB,EAAmB,CACjB,UACAkB,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAEX,EATH,UAWE,6BAAKA,EAAQ,KACb,6BAAKjB,EAASmB,OAAOF,EAAQ,GAAK,SAX7BA,EAAQ,GAFG,cAoB5B,eAACZ,EAAA,EAAUG,KAAX,CAAgBC,SAAU,EAA1B,UACE,cAACJ,EAAA,EAAUK,OAAX,kCACA,cAACL,EAAA,EAAUM,KAAX,UACE,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,UAAQ,EAA7B,SACE,kCACE,+BACE,sCACA,4CAEDX,EAAkBY,KAAI,SAACC,GAAD,OACrB,qBAEEC,QAAS,WACPnB,EAAmB,CACjB,UACAkB,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAEX,EATH,UAWE,6BAAKA,EAAQ,KACb,6BAAKjB,EAASmB,OAAOF,EAAQ,GAAK,SAX7BA,EAAQ,GAFM,gBAsBpC,ECpBcG,EA9CC,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,WAAYvB,EAAmC,EAAnCA,mBAAoBC,EAAe,EAAfA,SAC1D,OACE,cAACK,EAAA,EAAD,CAAWC,iBAAkB,GAAIC,YAAU,EAA3C,SACGgB,MAAMC,KAAKH,EAAQI,WAAWT,KAAI,SAACU,EAAKC,GACvC,OACE,eAACtB,EAAA,EAAUG,KAAX,CAAgBC,SAAUkB,EAA1B,UACE,cAACtB,EAAA,EAAUK,OAAX,UACGY,EAAWM,OAAOC,MAAK,SAACC,GAAD,OAAOA,EAAE,KAAOJ,EAAI,EAApB,IACpBJ,EAAWM,OAAOC,MAAK,SAACC,GAAD,OAAOA,EAAE,KAAOJ,EAAI,EAApB,IAAwB,GAC/C,SAEN,cAACrB,EAAA,EAAUM,KAAX,UACE,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,UAAQ,EAA7B,SACE,kCACE,+BACE,sCACA,4CAGDW,EAAI,GAAGV,KAAI,SAACe,GAAD,OACV,+BACE,oBACEb,QAAS,WACPnB,EAAmB,CACjB,SACAgC,EAAO,GACPA,EAAO,GACPA,EAAO,IAEV,EARH,SAUGA,EAAO,KAEV,6BAAK/B,EAASmB,OAAOY,EAAO,GAAK,SAb1BA,EAAO,GADN,aAdcJ,EAoCrC,KAGN,E,kBCVcK,EAjCA,SAAC,GAAoC,EAAlCC,YAAmC,IAAtBC,EAAqB,EAArBA,eAWvBC,EAAe,WAVF,IAAC1C,KAWP,yCAVX,IAAI2C,SAAQ,SAACC,EAASC,GACpB,GAAIC,SAASC,cAAT,sBAAsC/C,EAAtC,OAAgD,OAAO4C,IAC3D,IAAMI,EAASF,SAASG,cAAc,UACtCD,EAAOhD,IAAMA,EACbgD,EAAOE,OAAS,kBAAMN,GAAN,EAChBI,EAAOG,QAAU,SAACC,GAAD,OAASP,EAAOO,EAAhB,EACjBN,SAASO,KAAKC,YAAYN,EAC3B,KAGoDO,MAAK,WACzCC,OAAOC,OACApD,SAASlB,OAAOC,gBAAgB,CACpDsE,UAAWC,2EACXtE,MAAO,6CACPV,SAAU,SAACe,GACT+C,EAAe/C,EAAckE,aAC9B,IAGIC,oBACR,GACF,EAED,OACE,eAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQtC,QAAS,kBAAMiB,GAAN,EAAjC,UACE,cAAC,IAAD,IADF,YAIH,EC6BcsB,EA7DM,SAAC,GAMf,IALLC,EAKI,EALJA,gBACA3D,EAII,EAJJA,mBACA4D,EAGI,EAHJA,aACA3D,EAEI,EAFJA,SACA4D,EACI,EADJA,WAEA,IAAKD,EACH,OACE,yHAOJ,IAAME,EAAuBF,EAC1BzD,QAAO,SAAC4D,GAAD,OAAOA,EAAE,KAAOJ,EAAgB,EAAhC,IACPK,UAEH,OACE,gCACE,6BAAKL,EAAgB,KACrB,8BACE,+CAAkB1D,EAASmB,OAAOuC,EAAgB,GAAK,QAAiB,IAD1E,IAEI,IACF,wBACEM,UAAU,OACV9C,QAAS,WACPnB,EAAmB,KACpB,EAJH,wBASF,cAACa,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,UAAQ,EAA7B,SACE,kCACE,+BACE,wCACA,sCACA,2CAGD8C,EAAqB7C,KAAI,SAACiD,GAAD,OACxB,+BACE,6BACG,IAAIC,KAAKD,EAAY,GAAGE,MAAM,KAAK,IAAIC,wBACtCC,EACAT,KAGJ,6BAAKK,EAAY,KACjB,6BAAKjE,EAASmB,OAAO8C,EAAY,GAAK,SAR/BA,EAAY,GADG,WAgBnC,E,sECoQcK,MArTf,WACE,MAAoBC,mBAAS,MAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAmCC,MAAnC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BL,mBAAS,MAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAgCP,mBAAS,MAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAA8BT,mBAAS,MAAvC,mBAAOlD,EAAP,KAAgB4D,EAAhB,KACA,EAAoCV,mBAAS,MAA7C,mBAAOjD,EAAP,KAAmB4D,EAAnB,KACA,EAAgCX,mBAAS,MAAzC,mBAAOzE,EAAP,KAAiBqF,EAAjB,KACA,EAAoDZ,mBAAS,MAA7D,mBAAOa,EAAP,KAA2BC,EAA3B,KACA,EAAsDd,mBAAS,MAA/D,oBAAOe,GAAP,MAA4BC,GAA5B,MACA,GAAwBhB,mBAAS,WAAjC,qBAAOiB,GAAP,MAAaC,GAAb,MACA,GAA8ClB,mBAAS,MAAvD,qBAAOb,GAAP,MAAwB3D,GAAxB,MACA,GAAsCwE,mBAAS,MAA/C,qBAAOmB,GAAP,MAAoBC,GAApB,MACA,GAAsCpB,mBAAS,MAA/C,qBAAOqB,GAAP,MAAoBC,GAApB,MACA,GAAgDtB,mBAAS,GAAzD,qBAAOuB,GAAP,MAAyBC,GAAzB,MACA,GAA0BxB,mBAAS,MAAnC,qBAAO/G,GAAP,MAAcwI,GAAd,MAEMhG,GAAW,IAAIiG,KAAKC,aAAa,QAAS,CAC9CC,MAAO,WACPnG,SAAU,QAEN4D,GAAa,CAAEwC,KAAM,UAAWC,MAAO,OAAQC,IAAK,WAGpDC,GAAmB,WACvB5B,EAAW,CACT6B,SAAUpD,2EACVqD,aAAcrD,0CACdsD,OAAQ,OAERlI,gBAAgB,EAChBC,mBAAmB,EACnBkI,eAAe,EACfC,aAAa,EACbC,cAAe,2BACfC,UAAW,YACX/H,aAAc,CAAC,8CACfgI,iBAAkB,SAACC,GACG,WAAhBA,EAAKC,QACPC,QAAQC,IAAI,oCAEM,WAAhBH,EAAKC,SACPjC,EAAYgC,EAAKI,KAAK,GAAGC,WACzBvC,EAAUkC,EAAKI,KAAK,GAAGE,IACvBC,aAAaC,QAAQ,SAAUR,EAAKI,KAAK,GAAGE,IAE/C,GAEJ,EA+HD,OA5HAvJ,qBAAU,WACR,IAAK6G,GAAgBgB,KAAgBf,EAAQ,CAC3CmB,GAAS,MACT,IAAM3H,EAAQuG,EAAeA,EAAavB,aAAeuC,GACnD6B,EAAO,iDAAG,2GACR/I,EAAS,CACbgJ,QAAS,CACPC,cAAc,UAAD,OAAYtJ,GACzB,eAAgB,yBAElBuJ,aAAc,cACdC,mBAAoB,SAACC,GACnB/B,GACEgC,KAAKC,MAAOF,EAAcvK,OAASwH,EAAY,KAElD,GAXW,SAaSkD,IACpBC,IADoB,oDAE0BrD,EAF1B,qCAGnBnG,GAEDyJ,OAAM,SAACC,GACNpC,GAASoC,EAAEC,SACXvD,EAAU,MACVG,EAAW,MACXsC,aAAae,OACd,IAvBW,cAaRC,EAbQ,OAwBRC,EAAa,IAAIC,WAAWF,EAASvB,MAxB7B,SAyBI0B,IAAU,CAC1BC,WAAY,SAACC,GAAD,wCAAqCA,EAArC,IA1BA,OAyBRC,EAzBQ,OA4BdpE,EAAM,IAAIoE,EAAIC,SAASN,IA5BT,2CAAH,qDA8BbjB,aAAaC,QAAQ,SAAU3C,GAC/B4C,GACD,CACF,GAAE,CAAC7C,EAAcgB,GAAaf,EAAQE,IAGvChH,qBAAU,WACR,GAAIyG,EACF,IACE,IAAMuE,EAAavE,EAChBwE,KACC,mEACA,GACDpH,OAAOqH,QACN,SAACC,EAAUd,GAAX,OACEc,EAASC,IAAIf,EAAE,GAAf,sBAAwBc,EAAShB,IAAIE,EAAE,KAAO,IAA9C,CAAmDA,IADrD,GAEA,IAAIgB,KAERnE,EAAW8D,GACXxB,aAAaC,QAAQ,UAAW6B,KAAKC,UAAU/H,MAAMC,KAAKuH,KAE1D,IAAMQ,EAAgB/E,EAAGwE,KAAK,qCAAqC,GACnE9D,EAAcqE,GACdhC,aAAaC,QAAQ,aAAc6B,KAAKC,UAAUC,IAElD,IAAMC,EAAchF,EAAGwE,KACrB,gEACA,GAAGpH,OACLuD,EAAYqE,GACZjC,aAAaC,QAAQ,WAAY6B,KAAKC,UAAUE,IAEhD,IAAMC,EAAwBjF,EAAGwE,KAC/B,4GACA,GAAGpH,OACLyD,EAAsBoE,GACtBlC,aAAaC,QACX,qBACA6B,KAAKC,UAAUG,IAGjB,IAAMC,EAAyBlF,EAAGwE,KAChC,8GACA,GAAGpH,OACL2D,GAAuBmE,GACvBnC,aAAaC,QACX,sBACA6B,KAAKC,UAAUI,IAGjB/D,GAAe,IAAIzB,MACnBqD,aAAaC,QAAQ,cAAe6B,KAAKC,UAAU,IAAIpF,MAOxD,CANC,MAAOkE,GACPpC,GAASoC,EAAEuB,YACX7E,EAAU,MACVG,EAAW,MACXR,EAAM,MACN8C,aAAae,OACd,CAEJ,GAAE,CAAC9D,IAGJzG,qBAAU,WACJwJ,aAAaqC,QAAQ,YACvB3E,EAAW,IAAImE,IAAIC,KAAKQ,MAAMtC,aAAaqC,QAAQ,cAEjDrC,aAAaqC,QAAQ,eACvB1E,EAAcmE,KAAKQ,MAAMtC,aAAaqC,QAAQ,gBAE5CrC,aAAaqC,QAAQ,aACvBzE,EAAYkE,KAAKQ,MAAMtC,aAAaqC,QAAQ,cAE1CrC,aAAaqC,QAAQ,uBACvBvE,EACEgE,KAAKQ,MAAMtC,aAAaqC,QAAQ,wBAGhCrC,aAAaqC,QAAQ,wBACvBrE,GACE8D,KAAKQ,MAAMtC,aAAaqC,QAAQ,yBAGhCrC,aAAaqC,QAAQ,gBACvBjE,GAAe,IAAIzB,KAAKmF,KAAKQ,MAAMtC,aAAaqC,QAAQ,kBAEtDrC,aAAaqC,QAAQ,WACvB9E,EAAUyC,aAAaqC,QAAQ,UAElC,GAAE,KAEE/E,GAAUrH,GAEX,qCACGA,GAAQ,cAACsM,EAAA,EAAD,CAAOtG,QAAQ,SAAf,SAAyBhG,KAAiB,KACnD,qBACE2I,MAAO,CAAE4D,OAAQ,SACjB/F,UAAU,mDAFZ,SAIE,sBAAKmC,MAAO,CAAE6D,UAAW,UAAzB,UACE,cAACzG,EAAA,EAAD,CACE0G,KAAK,KACLzG,QAAQ,UACRtC,QAAS,kBAAMqF,IAAN,EAHX,2BAOA,uBACA,uBACA,kIAULlF,GAAYC,GAAexB,EA2B9B,gCACE,cAACoK,EAAA,EAAD,CAAQC,GAAG,OAAO3G,QAAQ,OAA1B,SACE,eAAC4G,EAAA,EAAD,WACE,eAACF,EAAA,EAAOG,MAAR,WACE,cAAC,IAAD,CAAQC,MAAM,QAAQnE,MAAO,CAAEoE,SAAU,WAAYC,OAAQ,KAAQ,IADvE,oBAIA,sBAAKrE,MAAO,CAAE6D,UAAW,SAAzB,UACE,cAAC,EAAD,CAAQ/H,YAAa2D,GAAa1D,eAAgB2D,KAAmB,IACrE,eAACtC,EAAA,EAAD,CAAQC,QAAQ,QAAQtC,QAAS,kBAAMqF,IAAN,EAAjC,UACE,cAAC,IAAD,IADF,8BAMN,eAAC6D,EAAA,EAAD,WACE,uBACA,uBACA,eAACK,EAAA,EAAD,CACEC,UAAWlF,GACXmF,SAAU,SAACC,GACTnF,GAAQmF,GACR7K,GAAmB,KACpB,EALH,UAOE,cAAC8K,EAAA,EAAD,CAAKpK,SAAS,UAAUqK,MAAM,UAA9B,SACIpH,IAA2C,YAAvBA,GAAgB,GAQpC,cAAC,EAAD,CACEA,gBAAiBA,GACjB3D,mBAAoBA,GACpB4D,aAAcyB,EACdpF,SAAUA,GACV4D,WAAYA,KAZd,cAAC,EAAD,CACEvC,QAASA,EACTC,WAAYA,EACZvB,mBAAoBA,GACpBC,SAAUA,OAYhB,cAAC6K,EAAA,EAAD,CAAKpK,SAAS,WAAWqK,MAAM,WAA/B,SACIpH,IAA2C,aAAvBA,GAAgB,GAOpC,cAAC,EAAD,CACEA,gBAAiBA,GACjB3D,mBAAoBA,GACpB4D,aAAc2B,GACdtF,SAAUA,GACV4D,WAAYA,KAXd,cAAC,EAAD,CACE9D,SAAUA,EACVC,mBAAoBA,GACpBC,SAAUA,UAalB,sBAAKgE,UAAU,SAAf,UACG0B,GACC,8BACE,uBADF,eAEeA,GAAYiE,cAEzB,KACJ,0DAC8B,IAC5B,mBAAGoB,KAAK,eAAR,4BAFF,wEA7FJ,qBACE5E,MAAO,CAAE4D,OAAQ,QAASC,UAAW,UACrChG,UAAU,mDAFZ,SAIE,gCACE,yCAAY8B,GAAZ,OACA,oDACsB,IACpB,wBACE5E,QAAS,WACPqG,aAAae,QACbxD,EAAU,KACX,EACDkG,MAAM,OALR,wBAQU,IAVZ,wBAgGT,E,SC3TDC,qBAAW1I,SAAS2I,eAAe,SAASC,OAAO,cAAC,EAAD,I","file":"static/js/main.3018aed5.chunk.js","sourcesContent":[null,null,null,"import { Accordion, Table } from 'react-bootstrap'\n\nconst Accounts = ({ accounts, setTransactionView, currency }) => {\n  const budgetAccounts = accounts.filter((a) => a[3] !== 'offbudget')\n  const offBudgetAccounts = accounts.filter((a) => a[3] === 'offbudget')\n\n  return (\n    <Accordion defaultActiveKey={[0]} alwaysOpen>\n      <Accordion.Item eventKey={0}>\n        <Accordion.Header>Budget Accounts</Accordion.Header>\n        <Accordion.Body>\n          <Table striped hover bordered>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Balance</th>\n              </tr>\n              {budgetAccounts.map((account) => (\n                <tr\n                  key={account[0]}\n                  onClick={() => {\n                    setTransactionView([\n                      'account',\n                      account[0],\n                      account[1],\n                      account[2]\n                    ])\n                  }}\n                >\n                  <td>{account[1]}</td>\n                  <td>{currency.format(account[2] / 100.0)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey={1}>\n        <Accordion.Header>Off Budget Accounts</Accordion.Header>\n        <Accordion.Body>\n          <Table striped hover bordered>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Balance</th>\n              </tr>\n              {offBudgetAccounts.map((account) => (\n                <tr\n                  key={account[0]}\n                  onClick={() => {\n                    setTransactionView([\n                      'account',\n                      account[0],\n                      account[1],\n                      account[2]\n                    ])\n                  }}\n                >\n                  <td>{account[1]}</td>\n                  <td>{currency.format(account[2] / 100.0)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  )\n}\n\nexport default Accounts\n","import { Accordion, Table } from 'react-bootstrap'\n\nconst Buckets = ({ buckets, bucketCats, setTransactionView, currency }) => {\n  return (\n    <Accordion defaultActiveKey={[]} alwaysOpen>\n      {Array.from(buckets.entries()).map((cat, i) => {\n        return (\n          <Accordion.Item eventKey={i} key={i}>\n            <Accordion.Header>\n              {bucketCats.values.find((c) => c[0] === cat[0])\n                ? bucketCats.values.find((c) => c[0] === cat[0])[1]\n                : 'Misc'}\n            </Accordion.Header>\n            <Accordion.Body>\n              <Table striped hover bordered>\n                <tbody>\n                  <tr>\n                    <th>Name</th>\n                    <th>Balance</th>\n                  </tr>\n\n                  {cat[1].map((bucket) => (\n                    <tr key={bucket[0]}>\n                      <td\n                        onClick={() => {\n                          setTransactionView([\n                            'bucket',\n                            bucket[0],\n                            bucket[1],\n                            bucket[2]\n                          ])\n                        }}\n                      >\n                        {bucket[1]}\n                      </td>\n                      <td>{currency.format(bucket[2] / 100.0)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Accordion.Body>\n          </Accordion.Item>\n        )\n      })}\n    </Accordion>\n  )\n}\n\nexport default Buckets\n","import { ArrowClockwise } from 'react-bootstrap-icons'\nimport { Button } from 'react-bootstrap'\n\nconst Reload = ({ accessToken, setAccessToken }) => {\n  const loadScript = (src) =>\n    new Promise((resolve, reject) => {\n      if (document.querySelector(`script[src=\"${src}\"]`)) return resolve()\n      const script = document.createElement('script')\n      script.src = src\n      script.onload = () => resolve()\n      script.onerror = (err) => reject(err)\n      document.body.appendChild(script)\n    })\n\n  const handleReload = () => {\n    loadScript('https://accounts.google.com/gsi/client').then(() => {\n      const google = window.google\n      const client = google.accounts.oauth2.initTokenClient({\n        client_id: process.env.REACT_APP_CLIENT_ID,\n        scope: 'https://www.googleapis.com/auth/drive.file',\n        callback: (tokenResponse) => {\n          setAccessToken(tokenResponse.access_token)\n        }\n      })\n\n      client.requestAccessToken()\n    })\n  }\n\n  return (\n    <Button variant=\"light\" onClick={() => handleReload()}>\n      <ArrowClockwise /> Reload\n    </Button>\n  )\n}\n\nexport default Reload\n","import { Table } from 'react-bootstrap'\n\nconst Transactions = ({\n  transactionView,\n  setTransactionView,\n  transactions,\n  currency,\n  dateFormat\n}) => {\n  if (!transactions) {\n    return (\n      <p>\n        No transactions found. You probably need to reload your budget file to\n        see transactions.\n      </p>\n    )\n  }\n\n  const filteredTransactions = transactions\n    .filter((t) => t[1] === transactionView[1])\n    .reverse()\n\n  return (\n    <div>\n      <h3>{transactionView[2]}</h3>\n      <p>\n        <strong>Balance: {currency.format(transactionView[3] / 100.0)}</strong>{' '}\n        |{' '}\n        <button\n          className=\"back\"\n          onClick={() => {\n            setTransactionView(null)\n          }}\n        >\n          Go Back\n        </button>\n      </p>\n      <Table striped hover bordered>\n        <tbody>\n          <tr>\n            <th>Posted</th>\n            <th>Memo</th>\n            <th>Amount</th>\n          </tr>\n\n          {filteredTransactions.map((transaction) => (\n            <tr key={transaction[0]}>\n              <td>\n                {new Date(transaction[2].split(' ')[0]).toLocaleDateString(\n                  undefined,\n                  dateFormat\n                )}\n              </td>\n              <td>{transaction[3]}</td>\n              <td>{currency.format(transaction[4] / 100.0)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Transactions\n","import { useEffect, useState } from 'react'\nimport useDrivePicker from './react-google-drive-picker'\nimport axios from 'axios'\nimport initSqlJs from 'sql.js'\nimport Accounts from './components/Accounts'\nimport Buckets from './components/Buckets'\nimport Reload from './components/Reload'\nimport Transactions from './components/Transactions'\nimport { Container, Tab, Tabs, Navbar, Button, Alert } from 'react-bootstrap'\nimport { Bucket, FileEarmarkText } from 'react-bootstrap-icons'\nimport './App.css'\n\nfunction App() {\n  const [db, setDb] = useState(null)\n  const [openPicker, authResponse] = useDrivePicker()\n  const [fileId, setFileId] = useState(null)\n  const [fileSize, setFileSize] = useState(null)\n  const [buckets, setBuckets] = useState(null)\n  const [bucketCats, setBucketCats] = useState(null)\n  const [accounts, setAccounts] = useState(null)\n  const [bucketTransactions, setBucketTransactions] = useState(null)\n  const [accountTransactions, setAccountTransactions] = useState(null)\n  const [view, setView] = useState('buckets')\n  const [transactionView, setTransactionView] = useState(null) //null or [transaction type(bucket/account), bucket/account id, name, balance]\n  const [lastUpdated, setLastUpdated] = useState(null)\n  const [reloadToken, setReloadToken] = useState(null)\n  const [downloadProgress, setDownloadProgress] = useState(0)\n  const [error, setError] = useState(null)\n\n  const currency = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  })\n  const dateFormat = { year: 'numeric', month: 'long', day: 'numeric' }\n\n  // Use Google Drive Picker\n  const handleOpenPicker = () => {\n    openPicker({\n      clientId: process.env.REACT_APP_CLIENT_ID,\n      developerKey: process.env.REACT_APP_DEVELOPER_KEY,\n      viewId: 'DOCS',\n      // token: localStorage.getItem('auth') || null, // pass oauth token in case you already have one\n      showUploadView: false,\n      showUploadFolders: false,\n      supportDrives: true,\n      multiselect: true,\n      viewMimeTypes: 'application/octet-stream',\n      viewQuery: '*.buckets',\n      customScopes: ['https://www.googleapis.com/auth/drive.file'],\n      callbackFunction: (data) => {\n        if (data.action === 'cancel') {\n          console.log('User clicked cancel/close button')\n        }\n        if (data.action === 'picked') {\n          setFileSize(data.docs[0].sizeBytes)\n          setFileId(data.docs[0].id)\n          localStorage.setItem('fileId', data.docs[0].id)\n        }\n      }\n    })\n  }\n\n  //If we have an auth token, load the DB from Google Drive\n  useEffect(() => {\n    if ((authResponse || reloadToken) && fileId) {\n      setError(null)\n      const token = authResponse ? authResponse.access_token : reloadToken\n      const getFile = async () => {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/x-sqlite3'\n          },\n          responseType: 'arraybuffer',\n          onDownloadProgress: (progressEvent) => {\n            setDownloadProgress(\n              Math.floor((progressEvent.loaded / fileSize) * 100)\n            )\n          }\n        }\n        const response = await axios\n          .get(\n            `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media&supportsAllDrives=true`,\n            config\n          )\n          .catch((e) => {\n            setError(e.message)\n            setFileId(null)\n            setBuckets(null)\n            localStorage.clear()\n          })\n        const uInt8Array = new Uint8Array(response.data)\n        const SQL = await initSqlJs({\n          locateFile: (file) => `https://sql.js.org/dist/${file}`\n        })\n        setDb(new SQL.Database(uInt8Array))\n      }\n      localStorage.setItem('fileId', fileId)\n      getFile()\n    }\n  }, [authResponse, reloadToken, fileId, fileSize])\n\n  //DB Queries - Saved to Local Storage and State\n  useEffect(() => {\n    if (db) {\n      try {\n        const newBuckets = db\n          .exec(\n            'SELECT id, name, balance, group_id FROM bucket WHERE kicked = 0'\n          )[0]\n          .values.reduce(\n            (entryMap, e) =>\n              entryMap.set(e[3], [...(entryMap.get(e[3]) || []), e]),\n            new Map()\n          )\n        setBuckets(newBuckets)\n        localStorage.setItem('buckets', JSON.stringify(Array.from(newBuckets)))\n\n        const newBucketCats = db.exec('SELECT id, name FROM bucket_group')[0]\n        setBucketCats(newBucketCats)\n        localStorage.setItem('bucketCats', JSON.stringify(newBucketCats))\n\n        const newAccounts = db.exec(\n          'SELECT id, name, balance, kind FROM account WHERE closed = 0'\n        )[0].values\n        setAccounts(newAccounts)\n        localStorage.setItem('accounts', JSON.stringify(newAccounts))\n\n        const newBucketTransactions = db.exec(\n          'SELECT id, bucket_id, posted, memo, amount FROM bucket_transaction WHERE posted > date(\"now\",\"-1 years\")'\n        )[0].values\n        setBucketTransactions(newBucketTransactions)\n        localStorage.setItem(\n          'bucketTransactions',\n          JSON.stringify(newBucketTransactions)\n        )\n\n        const newAccountTransactions = db.exec(\n          'SELECT id, account_id, posted, memo, amount FROM account_transaction WHERE posted > date(\"now\",\"-1 years\")'\n        )[0].values\n        setAccountTransactions(newAccountTransactions)\n        localStorage.setItem(\n          'accountTransactions',\n          JSON.stringify(newAccountTransactions)\n        )\n\n        setLastUpdated(new Date())\n        localStorage.setItem('lastUpdated', JSON.stringify(new Date()))\n      } catch (e) {\n        setError(e.toString())\n        setFileId(null)\n        setBuckets(null)\n        setDb(null)\n        localStorage.clear()\n      }\n    }\n  }, [db])\n\n  //Retrieve Data from Local Storage\n  useEffect(() => {\n    if (localStorage.getItem('buckets')) {\n      setBuckets(new Map(JSON.parse(localStorage.getItem('buckets'))))\n    }\n    if (localStorage.getItem('bucketCats')) {\n      setBucketCats(JSON.parse(localStorage.getItem('bucketCats')))\n    }\n    if (localStorage.getItem('accounts')) {\n      setAccounts(JSON.parse(localStorage.getItem('accounts')))\n    }\n    if (localStorage.getItem('bucketTransactions')) {\n      setBucketTransactions(\n        JSON.parse(localStorage.getItem('bucketTransactions'))\n      )\n    }\n    if (localStorage.getItem('accountTransactions')) {\n      setAccountTransactions(\n        JSON.parse(localStorage.getItem('accountTransactions'))\n      )\n    }\n    if (localStorage.getItem('lastUpdated')) {\n      setLastUpdated(new Date(JSON.parse(localStorage.getItem('lastUpdated'))))\n    }\n    if (localStorage.getItem('fileId')) {\n      setFileId(localStorage.getItem('fileId'))\n    }\n  }, [])\n\n  if (!fileId || error) {\n    return (\n      <>\n        {error ? <Alert variant=\"danger\">{error}</Alert> : null}\n        <div\n          style={{ height: '100vh' }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <div style={{ textAlign: 'center' }}>\n            <Button\n              size=\"lg\"\n              variant=\"primary\"\n              onClick={() => handleOpenPicker()}\n            >\n              Select Budget\n            </Button>\n            <br />\n            <br />\n            <p>\n              Welcome to Buckets Viewer. Use the button to select your .buckets\n              file from Google Drive.\n            </p>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  if (!buckets || !bucketCats || !accounts) {\n    return (\n      <div\n        style={{ height: '100vh', textAlign: 'center' }}\n        className=\"d-flex align-items-center justify-content-center\"\n      >\n        <div>\n          <p>Loading {downloadProgress}%</p>\n          <p>\n            Progress bar stuck?{' '}\n            <button\n              onClick={() => {\n                localStorage.clear()\n                setFileId(null)\n              }}\n              class=\"link\"\n            >\n              Click here\n            </button>{' '}\n            to start over.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>\n            <Bucket color=\"white\" style={{ position: 'relative', bottom: 2 }} />{' '}\n            Buckets Viewer\n          </Navbar.Brand>\n          <div style={{ textAlign: 'right' }}>\n            <Reload accessToken={reloadToken} setAccessToken={setReloadToken} />{' '}\n            <Button variant=\"light\" onClick={() => handleOpenPicker()}>\n              <FileEarmarkText /> Select New File\n            </Button>\n          </div>\n        </Container>\n      </Navbar>\n      <Container>\n        <br />\n        <br />\n        <Tabs\n          activeKey={view}\n          onSelect={(k) => {\n            setView(k)\n            setTransactionView(null)\n          }}\n        >\n          <Tab eventKey=\"buckets\" title=\"Buckets\">\n            {!transactionView || !transactionView[0] === 'bucket' ? (\n              <Buckets\n                buckets={buckets}\n                bucketCats={bucketCats}\n                setTransactionView={setTransactionView}\n                currency={currency}\n              />\n            ) : (\n              <Transactions\n                transactionView={transactionView}\n                setTransactionView={setTransactionView}\n                transactions={bucketTransactions}\n                currency={currency}\n                dateFormat={dateFormat}\n              />\n            )}\n          </Tab>\n          <Tab eventKey=\"accounts\" title=\"Accounts\">\n            {!transactionView || !transactionView[0] === 'account' ? (\n              <Accounts\n                accounts={accounts}\n                setTransactionView={setTransactionView}\n                currency={currency}\n              />\n            ) : (\n              <Transactions\n                transactionView={transactionView}\n                setTransactionView={setTransactionView}\n                transactions={accountTransactions}\n                currency={currency}\n                dateFormat={dateFormat}\n              />\n            )}\n          </Tab>\n        </Tabs>\n        <div className=\"footer\">\n          {lastUpdated ? (\n            <p>\n              <br />\n              Last loaded {lastUpdated.toString()}\n            </p>\n          ) : null}\n          <p>\n            &copy;2022 Dustin Lammiman.{' '}\n            <a href=\"privacy.html\">Privacy Policy</a>. This website is not\n            associated with One Part Rain, LLC.\n          </p>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport App from './App'\nimport { createRoot } from 'react-dom/client'\n\ncreateRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}